{
  "name": "claude-to-azure-proxy",
  "version": "1.0.0",
  "description": "API proxy server that translates Claude API requests to Azure OpenAI format",
  "main": "dist/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "start": "node dist/index.js",
    "dev": "tsx watch src/index.ts",
    "test": "vitest --run",
    "test:watch": "vitest",
    "test:coverage": "vitest --coverage",
    "lint": "eslint --config eslint.config.ts src/ tests/",
    "lint:file": "eslint --config eslint.config.ts",
    "lint:fix": "eslint --config eslint.config.ts src/ tests/ --fix",
    "type-check": "tsc --noEmit",
    "format": "prettier --write src/ tests/",
    "format:check": "prettier --check src/ tests/",
    "docker:build": "docker build -t claude-to-azure-proxy .",
    "docker:run": "docker run -p 8080:8080 --env-file .env claude-to-azure-proxy",
    "docker:security": "./scripts/security-scan.sh",
    "docker:clean": "docker system prune -f",
    "security:env": "./scripts/security-check-env.sh",
    "security:all": "pnpm run security:env && pnpm run docker:security",
    "quality:complexity": "npx ts-complex --threshold 10 src/",
    "quality:audit": "pnpm audit --audit-level moderate",
    "quality:audit:fix": "pnpm audit fix",
    "quality:type-coverage": "npx type-coverage --at-least 95 --strict",
    "quality:docs": "npx typedoc --options typedoc.json",
    "quality:all": "pnpm run quality:complexity && pnpm run quality:audit && pnpm run quality:type-coverage",
    "quality:security": "./scripts/security-audit.sh",
    "monitoring:profile": "node --prof dist/index.js",
    "monitoring:analyze": "node --prof-process isolate-*.log > profile.txt",
    "monitoring:memory": "node --inspect dist/index.js",
    "docs:api": "npx swagger-ui-serve docs/api-specification.yaml",
    "docs:generate": "npx typedoc --options typedoc.json",
    "docs:serve": "npx http-server docs/api -p 3001 -o",
    "sast:eslint": "npx eslint --config eslint.config.ts src/ tests/ --format json -o security-reports/eslint-results.json",
    "sast:all": "pnpm run sast:eslint && pnpm run quality:security",
    "pre-commit:check": "pnpm run type-check && pnpm run lint && pnpm run test && pnpm run format:check",
    "pre-commit:fix": "pnpm run lint:fix && pnpm run format",
    "validate": "pnpm run type-check && pnpm run lint && pnpm run test",
    "validate:config": "node -e \"require('./dist/config/index.js'); console.log('âœ… Configuration is valid')\"",
    "deploy": "./scripts/deploy.sh",
    "deploy:docker": "./scripts/deploy.sh docker",
    "deploy:docker-compose": "./scripts/deploy.sh docker-compose",
    "deploy:app-runner": "./scripts/deploy.sh app-runner",
    "rollback": "./scripts/rollback.sh",
    "rollback:docker": "./scripts/rollback.sh docker",
    "rollback:docker-compose": "./scripts/rollback.sh docker-compose",
    "rollback:app-runner": "./scripts/rollback.sh app-runner",
    "health-check": "./scripts/health-check.sh",
    "health-check:verbose": "./scripts/health-check.sh -v",
    "health-check:json": "./scripts/health-check.sh -j",
    "monitoring:start": "docker-compose -f monitoring/docker-compose.yml up -d",
    "monitoring:stop": "docker-compose -f monitoring/docker-compose.yml down",
    "monitoring:logs": "docker-compose -f monitoring/docker-compose.yml logs -f",
    "postinstall": "node -e \"if (process.env.NODE_ENV !== 'production' && !process.env.CI) { try { require('husky').install() } catch (e) {} }\""
  },
  "packageManager": "pnpm@10.18.3+sha512.bbd16e6d7286fd7e01f6b3c0b3c932cda2965c06a908328f74663f10a9aea51f1129eea615134bf992831b009eabe167ecb7008b597f40ff9bc75946aadfb08d",
  "keywords": [
    "claude",
    "azure",
    "openai",
    "proxy",
    "api"
  ],
  "author": "",
  "license": "MIT",
  "engines": {
    "node": ">=22.0.0"
  },
  "dependencies": {
    "axios": "^1.12.2",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "express": "^5.1.0",
    "express-rate-limit": "^8.1.0",
    "helmet": "^8.1.0",
    "joi": "^18.0.1",
    "openai": "^6.5.0",
    "uuid": "^13.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.38.0",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/node": "^24.8.1",
    "@types/superagent": "^8.1.9",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "@vitest/coverage-v8": "^3.2.4",
    "esbuild": "^0.25.11",
    "eslint": "^9.38.0",
    "eslint-plugin-security": "^3.0.1",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "jiti": "^2.6.1",
    "lint-staged": "^16.2.4",
    "prettier": "^3.6.2",
    "supertest": "^7.1.4",
    "swagger-ui-serve": "^0.0.4",
    "ts-complex": "^1.0.0",
    "tsx": "^4.20.6",
    "type-coverage": "^2.29.7",
    "typedoc": "^0.28.14",
    "typedoc-plugin-markdown": "^4.9.0",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.1",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --config eslint.config.ts --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "*.{dockerfile,Dockerfile}": [
      "prettier --write --parser dockerfile"
    ],
    "src/**/*.ts": [
      "pnpm run type-check"
    ],
    "tests/**/*.ts": [
      "pnpm run type-check"
    ]
  },
  "pnpm": {
    "overrides": {
      "esbuild": "^0.25.10"
    }
  }
}

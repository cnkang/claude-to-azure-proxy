openapi: 3.0.3
info:
  title: Claude-to-Azure OpenAI Proxy API
  description: |
    API proxy server that translates Claude API requests to Azure OpenAI format.
    
    This service acts as a gateway between Claude Code CLI and Azure OpenAI,
    providing seamless compatibility while maintaining security and performance.
    
    ## Authentication
    
    All API endpoints (except /health) require authentication using one of:
    - `Authorization: Bearer <token>` header
    - `x-api-key: <key>` header
    
    The authentication token/key must match the configured `PROXY_API_KEY`.
    
    ## Rate Limiting
    
    - Global rate limit: 100 requests per 15 minutes per IP
    - Authentication rate limit: 50 attempts per 15 minutes per IP
    
    ## Error Handling
    
    All errors follow a consistent format with correlation IDs for tracing:
    
    ```json
    {
      "error": {
        "type": "error_type",
        "message": "Human readable error message",
        "correlationId": "uuid-v4-correlation-id",
        "timestamp": "2024-01-01T00:00:00.000Z"
      }
    }
    ```
    
  version: 1.0.0
  contact:
    name: Claude-to-Azure Proxy Team
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://your-app-runner-url.amazonaws.com
    description: AWS App Runner production deployment

paths:
  /health:
    get:
      summary: Health Check
      description: |
        Returns the health status of the proxy server and its dependencies.
        
        This endpoint is used by AWS App Runner for health monitoring and
        does not require authentication.
      operationId: getHealth
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "healthy"
                timestamp: "2024-01-01T00:00:00.000Z"
                correlationId: "550e8400-e29b-41d4-a716-446655440000"
                checks:
                  memory:
                    status: "healthy"
                    responseTime: 1
                    message: "Memory usage: 45.2%"
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "unhealthy"
                timestamp: "2024-01-01T00:00:00.000Z"
                correlationId: "550e8400-e29b-41d4-a716-446655440000"
                checks:
                  memory:
                    status: "unhealthy"
                    responseTime: 1
                    message: "High memory usage: 92.1%"

  /:
    get:
      summary: Service Information
      description: Returns basic information about the proxy service
      operationId: getServiceInfo
      tags:
        - Service
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfoResponse'

  /v1/models:
    get:
      summary: List Available Models
      description: |
        Returns a list of available models compatible with Claude API format.
        
        This endpoint returns a static, hardcoded response that mimics the
        Claude API models endpoint to ensure compatibility with Claude Code CLI.
      operationId: listModels
      tags:
        - Claude API
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      responses:
        '200':
          description: List of available models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsResponse'
              example:
                object: "list"
                data:
                  - id: "claude-3-5-sonnet-20241022"
                    object: "model"
                    created: 1640995200
                    owned_by: "anthropic"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '503':
          $ref: '#/components/responses/ServiceUnavailableError'

  /v1/completions:
    post:
      summary: Create Completion
      description: |
        Creates a completion by forwarding the request to Azure OpenAI.
        
        This endpoint accepts Claude API format requests, transforms them
        to Azure OpenAI format, forwards to Azure OpenAI, and transforms
        the response back to Claude format.
      operationId: createCompletion
      tags:
        - Claude API
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
            example:
              model: "claude-3-5-sonnet-20241022"
              prompt: "Hello, world!"
              max_tokens: 100
              temperature: 0.7
      responses:
        '200':
          description: Completion response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
              example:
                id: "cmpl-123456789"
                type: "completion"
                completion: "Hello! How can I help you today?"
                model: "claude-3-5-sonnet-20241022"
                correlationId: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '503':
          $ref: '#/components/responses/ServiceUnavailableError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: |
        Bearer token authentication using the configured PROXY_API_KEY.
        
        Example: `Authorization: Bearer your-proxy-api-key`
    
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: |
        API key authentication using the configured PROXY_API_KEY.
        
        Example: `x-api-key: your-proxy-api-key`

  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - correlationId
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall health status of the service
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp of the health check
        correlationId:
          type: string
          format: uuid
          description: Unique identifier for request tracing
        checks:
          type: object
          description: Individual health check results
          additionalProperties:
            type: object
            properties:
              status:
                type: string
                enum: [healthy, degraded, unhealthy]
              responseTime:
                type: number
                description: Response time in milliseconds
              message:
                type: string
                description: Human readable status message
              details:
                type: object
                description: Additional check-specific details

    ServiceInfoResponse:
      type: object
      required:
        - service
        - version
        - status
        - correlationId
      properties:
        service:
          type: string
          example: "Claude-to-Azure Proxy"
        version:
          type: string
          example: "1.0.0"
        status:
          type: string
          example: "running"
        correlationId:
          type: string
          format: uuid

    ModelsResponse:
      type: object
      required:
        - object
        - data
      properties:
        object:
          type: string
          enum: [list]
          description: Object type identifier
        data:
          type: array
          description: Array of available models
          items:
            $ref: '#/components/schemas/Model'

    Model:
      type: object
      required:
        - id
        - object
        - created
        - owned_by
      properties:
        id:
          type: string
          description: Model identifier
          example: "claude-3-5-sonnet-20241022"
        object:
          type: string
          enum: [model]
          description: Object type identifier
        created:
          type: integer
          description: Unix timestamp of model creation
          example: 1640995200
        owned_by:
          type: string
          description: Organization that owns the model
          example: "anthropic"

    CompletionRequest:
      type: object
      required:
        - model
        - prompt
        - max_tokens
      properties:
        model:
          type: string
          description: Model identifier to use for completion
          example: "claude-3-5-sonnet-20241022"
        prompt:
          type: string
          description: Text prompt for completion
          example: "Hello, world!"
          maxLength: 100000
        max_tokens:
          type: integer
          description: Maximum number of tokens to generate
          minimum: 1
          maximum: 4096
          example: 100
        temperature:
          type: number
          description: Sampling temperature (0.0 to 2.0)
          minimum: 0.0
          maximum: 2.0
          example: 0.7
        top_p:
          type: number
          description: Nucleus sampling parameter
          minimum: 0.0
          maximum: 1.0
          example: 1.0
        stop:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
          description: Stop sequences for completion
          example: ["\n", "Human:", "Assistant:"]

    CompletionResponse:
      type: object
      required:
        - id
        - type
        - completion
        - model
        - correlationId
      properties:
        id:
          type: string
          description: Unique identifier for the completion
          example: "cmpl-123456789"
        type:
          type: string
          enum: [completion]
          description: Response type identifier
        completion:
          type: string
          description: Generated completion text
          example: "Hello! How can I help you today?"
        model:
          type: string
          description: Model used for completion
          example: "claude-3-5-sonnet-20241022"
        correlationId:
          type: string
          format: uuid
          description: Request correlation ID for tracing

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - message
            - correlationId
            - timestamp
          properties:
            type:
              type: string
              description: Error type identifier
              example: "authentication_failed"
            message:
              type: string
              description: Human readable error message
              example: "Invalid credentials provided"
            correlationId:
              type: string
              format: uuid
              description: Request correlation ID for tracing
            timestamp:
              type: string
              format: date-time
              description: ISO 8601 timestamp of the error

  responses:
    BadRequestError:
      description: Bad Request - Invalid request format or parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              type: "validation_error"
              message: "Invalid request parameters"
              correlationId: "550e8400-e29b-41d4-a716-446655440000"
              timestamp: "2024-01-01T00:00:00.000Z"

    UnauthorizedError:
      description: Unauthorized - Invalid or missing authentication credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              type: "authentication_failed"
              message: "Invalid credentials provided"
              correlationId: "550e8400-e29b-41d4-a716-446655440000"
              timestamp: "2024-01-01T00:00:00.000Z"

    RateLimitError:
      description: Too Many Requests - Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              type: "rate_limit_exceeded"
              message: "Too many requests, please try again later"
              correlationId: "550e8400-e29b-41d4-a716-446655440000"
              timestamp: "2024-01-01T00:00:00.000Z"

    ServiceUnavailableError:
      description: Service Unavailable - Service is temporarily unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              type: "service_unavailable"
              message: "Service is temporarily unavailable"
              correlationId: "550e8400-e29b-41d4-a716-446655440000"
              timestamp: "2024-01-01T00:00:00.000Z"

tags:
  - name: Health
    description: Health monitoring endpoints
  - name: Service
    description: Service information endpoints
  - name: Claude API
    description: Claude API compatible endpoints
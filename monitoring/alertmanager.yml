# Alertmanager configuration for Claude-to-Azure Proxy
# Configure notification channels for different alert severities

global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@example.com'
  smtp_auth_username: 'alerts@example.com'
  smtp_auth_password: 'your-smtp-password'

# Define notification templates
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route alerts to different receivers based on labels
route:
  group_by: ['alertname', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'default'
  routes:
    # Critical alerts go to multiple channels
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m
    
    # Security alerts get special handling
    - match:
        security: 'true'
      receiver: 'security-alerts'
      group_wait: 0s
      repeat_interval: 15m
    
    # Cost-related alerts for reasoning token usage
    - match:
        cost_impact: high
      receiver: 'cost-alerts'
      repeat_interval: 30m
    
    # Warning alerts with longer intervals
    - match:
        severity: warning
      receiver: 'warning-alerts'
      repeat_interval: 2h
    
    # Info alerts with even longer intervals
    - match:
        severity: info
      receiver: 'info-alerts'
      repeat_interval: 4h

# Define receivers for different notification channels
receivers:
  # Default receiver for unmatched alerts
  - name: 'default'
    email_configs:
      - to: 'devops@example.com'
        subject: '[Claude Proxy] {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Severity: {{ .Labels.severity }}
          {{ end }}

  # Critical alerts - multiple notification channels
  - name: 'critical-alerts'
    email_configs:
      - to: 'oncall@example.com,devops@example.com'
        subject: '[CRITICAL] Claude Proxy Alert: {{ .GroupLabels.alertname }}'
        body: |
          üö® CRITICAL ALERT üö®
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Runbook: {{ .Annotations.runbook_url }}
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }}
          {{ end }}
    
    # Slack webhook for critical alerts (configure your webhook URL)
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#alerts-critical'
        title: 'Critical Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
        color: 'danger'
    
    # PagerDuty integration for critical alerts (configure your integration key)
    pagerduty_configs:
      - routing_key: 'YOUR_PAGERDUTY_INTEGRATION_KEY'
        description: '{{ .GroupLabels.alertname }}: {{ .CommonAnnotations.summary }}'

  # Security alerts
  - name: 'security-alerts'
    email_configs:
      - to: 'security@example.com,devops@example.com'
        subject: '[SECURITY] Claude Proxy Security Alert: {{ .GroupLabels.alertname }}'
        body: |
          üîí SECURITY ALERT üîí
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          
          This alert indicates a potential security issue that requires immediate attention.
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }}
          {{ end }}
    
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#security-alerts'
        title: 'Security Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          üîí *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}
        color: 'warning'

  # Cost-related alerts for reasoning token usage
  - name: 'cost-alerts'
    email_configs:
      - to: 'finance@example.com,devops@example.com'
        subject: '[COST] Claude Proxy Cost Alert: {{ .GroupLabels.alertname }}'
        body: |
          üí∞ COST ALERT üí∞
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          
          This alert indicates high usage that may impact costs.
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }}
          {{ end }}

  # Warning alerts
  - name: 'warning-alerts'
    email_configs:
      - to: 'devops@example.com'
        subject: '[WARNING] Claude Proxy Warning: {{ .GroupLabels.alertname }}'
        body: |
          ‚ö†Ô∏è WARNING ‚ö†Ô∏è
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Runbook: {{ .Annotations.runbook_url }}
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }}
          {{ end }}

  # Info alerts
  - name: 'info-alerts'
    email_configs:
      - to: 'devops@example.com'
        subject: '[INFO] Claude Proxy Info: {{ .GroupLabels.alertname }}'
        body: |
          ‚ÑπÔ∏è INFORMATION ‚ÑπÔ∏è
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }}
          {{ end }}

# Inhibit rules to prevent alert spam
inhibit_rules:
  # If service is down, don't alert on high response times
  - source_match:
      alertname: 'ProxyServiceDown'
    target_match:
      alertname: 'HighResponseTime'
    equal: ['service']
  
  # If health check is failing, don't alert on other health-related issues
  - source_match:
      alertname: 'ProxyHealthCheckFailing'
    target_match_re:
      alertname: '(HighMemoryUsage|HighCPUUsage)'
    equal: ['service']
  
  # If Azure OpenAI is failing, don't alert on reasoning-related issues
  - source_match:
      alertname: 'AzureOpenAIAPIFailures'
    target_match_re:
      alertname: '(HighReasoningTokenUsage|ReasoningEffortAnomaly)'
    equal: ['service']